# prompt
gitrepo() {
  echo "$(git remote -v 2>/dev/null | grep "(fetch)" | awk -F'\t' '{print $1}')"/"$(git branch 2>/dev/null | grep -e '\* ' | sed 's/^..\(.*\)/\1/')"
}
COLOR_RESET="$({ exists tput && tput sgr0; } 2>/dev/null || printf '\033[0m')"
COLOR_BBLACK="$({ exists tput && tput bold && tput setaf 1; } 2>/dev/null || printf '\033[1;30m')"
COLOR_BRED="$({ exists tput && tput bold && tput setaf 1; } 2>/dev/null || printf '\033[1;31m')"
COLOR_BGREEN="$({ exists tput && tput bold && tput setaf 2; } 2>/dev/null || printf '\033[1;32m')"
COLOR_BYELLOW="$({ exists tput && tput bold && tput setaf 3; } 2>/dev/null || printf '\033[1;33m')"
COLOR_BBLUE="$({ exists tput && tput bold && tput setaf 6; } 2>/dev/null || printf '\033[1;34m')"
COLOR_BPURPLE="$({ exists tput && tput bold && tput setaf 6; } 2>/dev/null || printf '\033[1;35m')"
COLOR_BCYAN="$({ exists tput && tput bold && tput setaf 6; } 2>/dev/null || printf '\033[1;36m')"
COLOR_BWHITE="$({ exists tput && tput bold && tput setaf 6; } 2>/dev/null || printf '\033[1;37m')"
PS1=$(echo "\n${COLOR_BBLUE}\$(git status -s 2> /dev/null)${COLOR_RESET}\n ${COLOR_BGREEN}·${COLOR_RESET} ${COLOR_BYELLOW}\$(date +"%H:%M")${COLOR_RESET} ${COLOR_BRED}\$(gitrepo)${COLOR_RESET} ${COLOR_BCYAN}\$(pwd | sed "s:${HOME}:~:g")${COLOR_RESET}\n · ")

export PATH="$PATH:/var/lib/flatpak/exports/bin"
export PATH="$PATH:$HOME/.local/bin"
export PATH="$PATH:/usr/sbin"
export PATH="$PATH:/usr/bin"
export PATH="$PATH:/sbin"
export PATH="$PATH:/bin"

# runtime-dir
if test -z "${XDG_RUNTIME_DIR}"; then
    export XDG_RUNTIME_DIR=/tmp/${UID}-runtime-dir
    if ! test -d "${XDG_RUNTIME_DIR}"; then
        mkdir "${XDG_RUNTIME_DIR}"
        chmod 0700 "${XDG_RUNTIME_DIR}"
    fi
fi

export HISTFILE="$HOME/.bash_history" # yash history file
export WLR_NO_HARDWARE_CURSORS=1
export QEMU='-vga none -device virtio-gpu-pci -display gtk,gl=on'
export EDITOR='nvim'
export VISUAL='nvim-qt'
# export GTK_THEME='Catppuccin-Frappe-Standard-Lavender-dark:dark'
export GTK_THEME='gruvbox:dark'
export BEMENU_OPTS='-i -l 20 --fb "#303446" --ff "#c6d0f5" --nb "#303446" --nf "#c6d0f5" --tb "#303446" --hb "#303446" --tf "#e78284" --hf "#e5c890" --nf "#c6d0f5" --af "#c6d0f5" --ab "#303446"'

# export GPG_TTY=$(tty)

# alias sway='WLR_RENDERER=vulkan WLR_DRM_DEVICES=/dev/dri/card0:/dev/dri/card1 sway'
alias xwayland="env -u WAYLAND_DISPLAY"
alias grubupdate="sudo grub-mkconfig -o /boot/grub/grub.cfg"
alias killwindows="ps -aux | grep windows | awk -Fa '{ print $2 }' | awk -F0.0 '{ print $1 }' | xargs kill -9"

alias e='nvim || vim || vi'
alias v='e'
alias cat='cat -n'
alias grep='grep -i --color=auto'
alias dd='dd status=progress'
alias curl='curl -L'
alias ll='ls -lahF'
alias ls='ls --color=auto -lhF'
alias ff='coincidence=$(find . 2>/dev/null | BEMENU_BACKEND=curses bemenu); if [ -f $coincidence ]; then $EDITOR $coincidence || cd $coincidence; fi'
alias fh='coincidence=$(find ~ 2>/dev/null | BEMENU_BACKEND=curses bemenu); if [ -f $coincidence ]; then $EDITOR $coincidence || cd $coincidence; fi'
alias fg='coincidence=$(find / 2>/dev/null | BEMENU_BACKEND=curses bemenu); if [ -f $coincidence ]; then $EDITOR $coincidence || cd $coincidence; fi'
alias monitor-mem='ps axch -o cmd:15,rss --sort=-rss | numfmt --from-unit=1024 --to=iec --field 2 2> /dev/null'
alias monitor-mempercent='ps axch -o cmd:15,%mem --sort=-%mem'
alias monitor-cpu='ps axch -o cmd:15,%cpu --sort=-%cpu'
alias weather='curl wttr.in/a-coruna?format="%t(%C)"'

alias umount-ssh='fusermount -u'
alias umount-usb='udisksctl umount -b'
alias eject-usb='udisksctl power-off -b'

alias bt-connect-trackpad="bluetoothctl devices | grep 'Magic Trackpad' | awk -F' ' '{printf \$2}' | xargs bluetoothctl connect"
alias bt-disconnect-trackpad="bluetoothctl devices | grep 'Magic Trackpad' | awk -F' ' '{printf \$2}' | xargs bluetoothctl disconnect"

alias png2webp='for file in *.png; do convert -quality 100 "$file" "${file%.png}.webp"; done'

fetch() {
  # host
  echo $(echo "${COLOR_BCYAN}Γ host:${COLOR_RESET}" ) $(/bin/sh -c "cat /etc/hostname")
  # distro
  echo $(echo "${COLOR_BCYAN}| distro:${COLOR_RESET}" ) $(/bin/sh -c "cat /etc/os-release | grep -oP '(?<=PRETTY_NAME=\").*(?=\")'")
  # kernel
  echo $(echo "${COLOR_BCYAN}| kernel:${COLOR_RESET}" ) $(uname -r)
  # shell
  echo $(echo "${COLOR_BGREEN}| shell:${COLOR_RESET}" ) $(echo $SHELL)
  # terminal
  echo $(echo "${COLOR_BGREEN}| terminal:${COLOR_RESET}" ) $(echo $TERM)
  # product
  echo $(echo "${COLOR_BPURPLE}| product:${COLOR_RESET}") $(/bin/sh -c "cat /sys/devices/virtual/dmi/id/product_name")
  # bios
  echo $(echo "${COLOR_BPURPLE}| bios:${COLOR_RESET}") $(/bin/sh -c "cat /sys/devices/virtual/dmi/id/bios_version")
  # cpu
  echo $(echo "${COLOR_BPURPLE}| cpu:${COLOR_RESET}" ) $(/bin/sh -c "cat /proc/cpuinfo" | grep -m1 "model name" | awk -F': ' '{print $2}') "("$(/bin/sh -c "cat /proc/cpuinfo" | grep "model name" | wc -l)" cores)"
  # gpu
  lspci 2> /dev/null | grep -q -wi VGA && echo $(echo "${COLOR_BPURPLE}| gpu:${COLOR_RESET}" ) $(lspci | grep VGA)
  lspci 2> /dev/null | grep -q -wi Display && echo $(echo "${COLOR_BPURPLE}| gpu:${COLOR_RESET}" ) $(lspci | grep Display)
  # status
  echo $(echo "${COLOR_BRED}| temp:${COLOR_RESET}" ) $(($(/bin/sh -c "cat /sys/class/thermal/thermal_zone0/temp" || echo 1) / 1000))°C
  echo $(echo "${COLOR_BRED}| cpu:${COLOR_RESET}" ) $(top -b -n1 | grep "Cpu(s)" | awk '{print $2 + $4}')%
  echo $(echo "${COLOR_BRED}| mem:${COLOR_RESET}" ) $(free -m | awk 'NR==2{printf "%.2f%%\t\t", $3*100/$2 }')
  echo $(echo "${COLOR_BRED}| disk:${COLOR_RESET}" ) $(df -h 2> /dev/null | awk '$NF=="/"{printf "%s\t\t", $5}')
  echo $(echo "${COLOR_BBLUE}| mic:${COLOR_RESET}" ) $(pactl -v 2> /dev/null && pactl get-source-mute @DEFAULT_SOURCE@ || wpctl get-volume @DEFAULT_AUDIO_SOURCE@ | grep -q "MUTED" && echo "muted" || echo "unmuted")
  echo $(echo "${COLOR_BBLUE}| vol:${COLOR_RESET}" ) $(pactl -v 2> /dev/null && pactl get-sink-volume @DEFAULT_SINK@ | grep -oP '(?<=front-left: ).*(?=front-right: )' | grep -oP '(?<=/ ).*(?= /)' | awk -F': ' '{printf $2}' || wpctl get-volume @DEFAULT_AUDIO_SINK@ | awk -F': ' '{printf $2}')
  echo $(echo "${COLOR_BYELLOW}| bat:${COLOR_RESET}" ) $(/bin/sh -c "cat /sys/class/power_supply/BAT0/capacity")%
  # uptime
  echo $(echo "${COLOR_BYELLOW}| uptime:${COLOR_RESET}" ) $(uptime | awk -F',' '{print $1}' | awk -F' ' '{print $NF}')
  # date and cal
  echo "${COLOR_BYELLOW}L $(date) ${COLOR_RESET}" && (cal --color=always | sed 's/^/  /')
}

superstatus() {
  for folder in $(find . -type d -name .git); do (cd ${folder/.git/} && git status -s 2> /dev/null) | awk -F'.' '{print "['$folder']", $0}'; done
}

supergitgrep() {
  git grep "$@" $(git rev-list --all)
}

termbin() {
  # if no args are passed, read stdin to check if they come from pipe
  if [ $# = 0 ]; then
    while read x
    do
      args="$args\n$x"
    done
  else
    args=$@
    # if args is a file, cat the content of that file into args
    if [ -f "$args" ]; then
      file="$args"
      args=""
      while read l
      do
        args="$args\n$l"
      done < $file
    fi
  fi
  echo $args | nc termbin.com 9999
}
